{"version":3,"sources":["CustomPagination.tsx","libs/checkRequiredField.ts","common/TextInput.tsx","libs/useErrors.ts","modules/users/users.tsx","modules/users/changeMyPassword.tsx","libs/themes.ts","reducers/theme.ts","ThemeSwitcher.tsx","CustomAppBar.tsx","CustomLayout.tsx","CustomTheme.ts","@generated/hooks.tsx","modules/deliveryNotes/index.tsx","hooks/useAuth.ts","modules/login.tsx","authProvider.tsx","locales/index.ts","App.tsx","appProvidersFactory.ts","libs/createApolloClient.ts","index.tsx"],"names":["CustomPagination","props","Pagination","rowsPerPageOptions","checkRequiredFields","list","source","find","listItem","required","TextInput","field","useField","errorMessage","error","meta","validate","requiredFieldsList","push","getValidate","variant","size","InputLabelProps","FormHelperTextProps","InputProps","helperText","style","flex","useErrors","notify","useNotify","useState","undefined","errors","setErrors","handleSetErrors","errorResponse","errorResult","findInChildren","validationError","property","constraints","children","startCase","camelCase","head","Object","values","length","forEach","graphQLErrors","graphQLError","extensions","exception","validationErrors","response","generalErrorCode","StyledBorder","styled","div","StyledTypography","Typography","UserForm","useGetIdentity","marginBottom","id","Grid","container","spacing","item","md","firstName","width","lastName","email","BooleanInput","isAdmin","record","password","UserCreate","Create","undoable","onFailure","SimpleForm","initialValues","isAd","UserEdit","Edit","UserFilter","Filter","label","alwaysOn","NullableBooleanInput","CustomDeleteButton","identity","DeleteWithConfirmButton","mutationMode","UsersList","bulkActionButtons","filters","filter","deletedAt","equals","pagination","Datagrid","TextField","BooleanField","EditButton","ChangeMyPassword","useUpdate","update","loading","newPassword","showNewPassword","confirmPassword","showConfirmPassword","showErrorPassword","setValues","handleChange","prop","event","target","value","handleShowPassword","type","handleMouseDownPassword","preventDefault","onSubmit","a","data","presetPassword","returnPromise","localStorage","setItem","JSON","stringify","window","location","href","Card","Title","title","CardContent","Alert","severity","FormControl","InputLabel","OutlinedInput","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","onChange","marginTop","Button","startIcon","disabled","darkTheme","palette","primary","main","secondary","overrides","MuiAppBar","colorSecondary","color","backgroundColor","MuiButtonBase","root","content","display","height","top","right","opacity","borderRadius","disableRipple","lightTheme","light","dark","contrastText","background","default","shape","RaMenuItemLink","borderLeft","active","MuiPaper","elevation1","boxShadow","border","backgroundClip","MuiButton","contained","MuiLinearProgress","colorPrimary","barColorPrimary","MuiFilledInput","MuiSnackbarContent","CHANGE_THEME","themeReducer","previousState","getItem","action","payload","ThemeSwitcher","theme","useSelector","state","dispatch","useDispatch","changeTheme","useStyles","makeStyles","textAlign","textOverflow","whiteSpace","overflow","logo","maxWidth","marginLeft","alignItems","ChangeMyPasswordMenu","forwardRef","ref","MenuItemLink","to","primaryText","leftIcon","sidebarIsOpen","CustomUserMenu","UserMenu","CustomAppBar","classes","AppBar","elevation","userMenu","src","alt","className","CustomLayout","Layout","appBar","customTheme","createTheme","defaultTheme","MuiTableRow","defaultOptions","gql","GetDeliveryNotesDocument","DeliveryNotesList","search","setSearch","baseOptions","options","Apollo","useGetDeliveryNotesLazyQuery","getDeliveryNotes","console","log","variables","TableContainer","component","Paper","maxHeight","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","key","sx","KlientNazev","FakturacniMistoNazev","DodaciMisto_Nazev","DodaciMisto_Mesto","DodaciMisto_Zeme","CisloDL","CisloObjKlienta","CisloObjZakaznika","Doprava_CODE","url","cookie","get","download","margin","LOGIN_MUTATION","LoginForm","setEmail","setPassword","handleLogin","useMutation","login","access_token","set","httpOnly","user","useAuth","submit","e","ThemeProvider","padding","justifyContent","name","Notification","LoginWithTheme","withAuthProvider","apolloClient","useApolloClient","useMemo","logout","removeItem","resetStore","Promise","resolve","checkError","status","message","includes","document","reject","redirectTo","checkAuth","parse","getPermissions","getIdentity","polyglotI18nProvider","locale","merge","germanMessages","de","englishMessages","en","resolveBrowserLocale","allowMissing","onMissingKey","Center","SpinnerWrapper","createGlobalStyle","App","dataProvider","setDataProvider","authProvider","useEffect","buildDataProvider","then","p","catch","resource","params","CREATE","equipmentType","equipmentTypeId","vehicle","vehicleId","appProvidersFactory","client","introspection","schema","__schema","queryDialect","Admin","disableTelemetry","layout","i18nProvider","CustomTheme","customReducers","loginPage","Login","customRoutes","path","auth","Resource","icon","FindInPageIcon","edit","create","AssignmentIndIcon","CircularProgress","headerLink","setContext","_","headers","token","Authorization","errorLink","onError","networkError","locations","createApolloClient","endpoint","ApolloClient","link","ApolloLink","from","createUploadLink","uri","cache","InMemoryCache","dayjs","extend","timezone","utc","process","REACT_APP_API_URL","ReactDOM","render","ApolloProvider","libraries","googleMapsApiKey","getElementById"],"mappings":"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","file":"static/js/main.d0fa6509.chunk.js","sourcesContent":["import { Pagination } from 'react-admin';\n\nconst CustomPagination = (props) => (\n  <Pagination rowsPerPageOptions={[10, 25, 50, 100]} {...props} />\n);\n\nexport default CustomPagination;\n","import { required } from 'react-admin';\n\nconst checkRequiredFields = (list: string[], source: string) => {\n  const found = list.find((listItem) => listItem === source);\n\n  if (found) {\n    return [required()];\n  }\n  return [];\n};\n\nexport default checkRequiredFields;\n\nexport const getValidate = (props) => {\n  let validate = props.validate || [];\n\n  if (props.requiredFieldsList) {\n    if (typeof validate === 'object') {\n      validate.push(\n        ...checkRequiredFields(props.requiredFieldsList, props.source),\n      );\n    } else {\n      validate = [\n        validate,\n        ...checkRequiredFields(props.requiredFieldsList, props.source),\n      ];\n    }\n  }\n\n  return validate;\n};\n","import { TextInput as AdminTextInput } from 'react-admin';\nimport { getValidate } from '../libs/checkRequiredField';\nimport { useField } from 'react-final-form';\n\nconst TextInput = (props) => {\n  const field = useField(props.source);\n  const errorMessage = props.error || field?.meta?.error;\n  const validate = getValidate(props);\n\n  return (\n    <AdminTextInput\n      {...props}\n      validate={validate}\n      variant=\"outlined\"\n      size=\"small\"\n      InputLabelProps={{\n        error: !!errorMessage,\n      }}\n      FormHelperTextProps={{\n        error: !!errorMessage,\n      }}\n      InputProps={{\n        error: !!errorMessage,\n      }}\n      error={!!errorMessage}\n      helperText={errorMessage}\n      style={{ flex: 1, ...props.style }}\n    />\n  );\n};\n\nexport default TextInput;\n","import { camelCase, head, startCase } from 'lodash';\n\nimport { useNotify } from 'react-admin';\nimport { useState } from 'react';\n\nexport const useErrors = () => {\n  const notify = useNotify();\n  const [errors, setErrors] = useState(undefined);\n  const handleSetErrors = (errorResponse: any) => {\n    let errorResult = undefined;\n\n    const findInChildren = (validationError) => {\n      const { property, constraints, children } = validationError;\n\n      if (property && constraints) {\n        errorResult = errorResult || {};\n        errorResult[property] = startCase(\n          camelCase(head(Object.values(constraints))),\n        );\n      }\n\n      if (children && children.length) {\n        children.forEach(findInChildren);\n      }\n    };\n\n    (errorResponse?.graphQLErrors || []).forEach((graphQLError) => {\n      if (!graphQLError?.extensions.exception.validationErrors) {\n        notify(\n          graphQLError?.extensions.exception.response.generalErrorCode,\n          'error',\n        );\n      }\n\n      if (graphQLError?.extensions?.exception?.validationErrors.length) {\n        graphQLError?.extensions?.exception?.validationErrors.forEach(\n          findInChildren,\n        );\n      }\n    });\n\n    setErrors(errorResult);\n  };\n  return {\n    handleSetErrors,\n    errors,\n  };\n};\n","import {\n  TextInput as AdminTextInput,\n  BooleanField,\n  BooleanInput,\n  Create,\n  Datagrid,\n  DeleteWithConfirmButton,\n  Edit,\n  EditButton,\n  Filter,\n  NullableBooleanInput,\n  List as RAList,\n  SimpleForm,\n  TextField,\n  required,\n  useGetIdentity,\n} from \"react-admin\";\nimport { Grid, Typography } from \"@mui/material\";\n\nimport CustomPagination from \"../../CustomPagination\";\nimport TextInput from \"../../common/TextInput\";\nimport styled from \"styled-components\";\nimport { useErrors } from \"../../libs/useErrors\";\n\nconst StyledBorder = styled.div`\n  border: 1px solid #e0e0e3;\n  padding: 12px;\n  padding-top: 20px;\n  position: relative;\n  border-radius: 4px;\n`;\n\nconst StyledTypography = styled(Typography)`\n  position: absolute;\n  top: -16px;\n  background: #fff;\n  padding: 0 10px;\n`;\n\nconst UserForm = (props) => {\n  const { errors } = props;\n  const identity = useGetIdentity();\n\n  return (\n    <div>\n      <Typography variant=\"h5\" style={{ marginBottom: 30 }}>\n        {props.id ? \"Edit user\" : \"Create user\"}\n      </Typography>\n      <Grid container spacing={8}>\n        <Grid item md={4}>\n          <StyledBorder>\n            <StyledTypography variant=\"h6\" style={{ marginBottom: 24 }}>\n              Basic info\n            </StyledTypography>\n            <TextInput\n              source=\"firstName\"\n              error={errors?.firstName}\n              style={{ width: \"100%\" }}\n            />\n            <TextInput\n              source=\"lastName\"\n              error={errors?.lastName}\n              style={{ width: \"100%\" }}\n            />\n            <TextInput\n              source=\"email\"\n              validate={[required()]}\n              error={errors?.email}\n              style={{ width: \"100%\" }}\n            />\n            {true && (\n              <BooleanInput\n                source=\"isAdmin\"\n                error={errors?.isAdmin}\n                style={{ width: \"100%\" }}\n              />\n            )}\n            {!props.record?.id && (\n              <TextInput\n                source=\"password\"\n                error={errors?.password}\n                validate={[required()]}\n                style={{ width: \"100%\" }}\n              />\n            )}\n          </StyledBorder>\n        </Grid>\n        <Grid item md={4}></Grid>\n        <Grid item md={4}></Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport const UserCreate = (props: any) => {\n  const { errors, handleSetErrors } = useErrors();\n  return (\n    <Create\n      {...props}\n      undoable={false}\n      onFailure={(errors) => handleSetErrors(errors)}\n    >\n      <SimpleForm\n        initialValues={{\n          isAd: false,\n          isAdmin: false,\n        }}\n      >\n        <UserForm {...props} errors={errors} />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport const UserEdit = (props: any) => {\n  const { errors, handleSetErrors } = useErrors();\n  return (\n    <Edit\n      {...props}\n      undoable={false}\n      onFailure={(errors) => handleSetErrors(errors)}\n    >\n      <SimpleForm>\n        <UserForm {...props} errors={errors} />\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport const UserFilter = (props: any) => (\n  <Filter {...props}>\n    <AdminTextInput label=\"Search\" source=\"q\" alwaysOn />\n    <AdminTextInput source=\"email\" />\n    <AdminTextInput source=\"firstName\" />\n    <AdminTextInput source=\"lastName\" />\n    <NullableBooleanInput source=\"isAdmin\" />\n    <NullableBooleanInput source=\"isAd\" />\n  </Filter>\n);\n\nconst CustomDeleteButton = (props) => {\n  const { identity } = useGetIdentity();\n\n  if (identity?.id === props?.record?.id) return null;\n\n  return (\n    <DeleteWithConfirmButton mutationMode=\"pessimistic\" record={props.record} />\n  );\n};\n\nexport const UsersList = (props: any) => {\n  return (\n    <RAList\n      {...props}\n      bulkActionButtons={false}\n      filters={<UserFilter />}\n      filter={{\n        deletedAt: { equals: null },\n      }}\n      pagination={<CustomPagination />}\n    >\n      <Datagrid>\n        <TextField source=\"email\" />\n        <TextField source=\"firstName\" />\n        <TextField source=\"lastName\" />\n        <BooleanField source=\"isA\" />\n        <BooleanField source=\"isAdmin\" />\n        <CustomDeleteButton />\n        <EditButton />\n      </Datagrid>\n    </RAList>\n  );\n};\n","import {\n  Alert,\n  Button,\n  FormControl,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n} from '@mui/material';\nimport { Title, useGetIdentity, useUpdate } from 'react-admin';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@mui/material/IconButton';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { useState } from 'react';\n\nconst ChangeMyPassword = () => {\n  const { identity } = useGetIdentity();\n  const [update, { loading }] = useUpdate();\n  const [values, setValues] = useState({\n    newPassword: '',\n    showNewPassword: false,\n    confirmPassword: '',\n    showConfirmPassword: false,\n    showErrorPassword: false,\n  });\n\n  const handleChange = (prop) => (event) => {\n    setValues({\n      ...values,\n      [prop]: event.target.value,\n      showErrorPassword: false,\n    });\n  };\n\n  const handleShowPassword = (type, value) => {\n    setValues({\n      ...values,\n      [type]: value,\n    });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const onSubmit = async () => {\n    if (loading) return false;\n\n    if (!values.newPassword || !values.confirmPassword) {\n      return handleShowPassword(\n        'showErrorPassword',\n        'Password value is missing!',\n      );\n    }\n\n    if (values.newPassword !== values.confirmPassword) {\n      return handleShowPassword(\n        'showErrorPassword',\n        'New password and confirm password should be the same!',\n      );\n    }\n\n    const data: any = {\n      password: values.newPassword,\n      presetPassword: false,\n    };\n\n    await update('User', identity?.id, data, {\n      returnPromise: true,\n    });\n\n    localStorage.setItem(\n      'user',\n      JSON.stringify({ ...identity, presetPassword: false }),\n    );\n\n    window.location.href = '/';\n  };\n\n  return (\n    <Card>\n      <Title title=\"Change my password\" />\n      <CardContent>\n        <form onSubmit={onSubmit}>\n          {values.showErrorPassword && (\n            <Alert severity=\"error\" style={{ marginBottom: 26 }}>\n              {values.showErrorPassword}\n            </Alert>\n          )}\n\n          <FormControl size=\"small\">\n            <InputLabel>New password</InputLabel>\n            <OutlinedInput\n              type={values.showNewPassword ? 'text' : 'password'}\n              size=\"small\"\n              label=\"New password\"\n              value={values.newPassword}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={() =>\n                      handleShowPassword(\n                        'showNewPassword',\n                        !values.showNewPassword,\n                      )\n                    }\n                    onMouseDown={handleMouseDownPassword}\n                    edge=\"end\">\n                    {values.showNewPassword ? (\n                      <VisibilityOff />\n                    ) : (\n                      <Visibility />\n                    )}\n                  </IconButton>\n                </InputAdornment>\n              }\n              onChange={handleChange('newPassword')}\n            />\n          </FormControl>\n\n          <br />\n\n          <FormControl size=\"small\" style={{ marginTop: 20 }}>\n            <InputLabel>Confirm new password</InputLabel>\n            <OutlinedInput\n              type={values.showConfirmPassword ? 'text' : 'password'}\n              size=\"small\"\n              label=\"Confirm new password\"\n              value={values.confirmPassword}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={() =>\n                      handleShowPassword(\n                        'showConfirmPassword',\n                        !values.showConfirmPassword,\n                      )\n                    }\n                    onMouseDown={handleMouseDownPassword}\n                    edge=\"end\">\n                    {values.showConfirmPassword ? (\n                      <VisibilityOff />\n                    ) : (\n                      <Visibility />\n                    )}\n                  </IconButton>\n                </InputAdornment>\n              }\n              onChange={handleChange('confirmPassword')}\n            />\n          </FormControl>\n\n          <br />\n\n          <Button\n            variant=\"contained\"\n            style={{ marginTop: 20 }}\n            startIcon={<SaveIcon />}\n            disabled={loading}\n            onClick={onSubmit}>\n            Save\n          </Button>\n        </form>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ChangeMyPassword;\n","export const darkTheme = {\n  palette: {\n    primary: {\n      main: '#90caf9',\n    },\n    secondary: {\n      main: '#FBBA72',\n    },\n    type: 'dark', // Switching the dark mode on is a single property value change.\n  },\n  overrides: {\n    MuiAppBar: {\n      colorSecondary: {\n        color: '#ffffffb3',\n        backgroundColor: '#616161e6',\n      },\n    },\n    MuiButtonBase: {\n      root: {\n        '&:hover:active::after': {\n          // recreate a static ripple color\n          // use the currentColor to make it work both for outlined and contained buttons\n          // but to dim the background without dimming the text,\n          // put another element on top with a limited opacity\n          content: '\"\"',\n          display: 'block',\n          width: '100%',\n          height: '100%',\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          backgroundColor: 'currentColor',\n          opacity: 0.3,\n          borderRadius: 'inherit',\n        },\n      },\n    },\n  },\n  props: {\n    MuiButtonBase: {\n      // disable ripple for perf reasons\n      disableRipple: true,\n    },\n  },\n};\n\nexport const lightTheme = {\n  palette: {\n    primary: {\n      main: '#4f3cc9',\n    },\n    secondary: {\n      light: '#5f5fc4',\n      main: '#283593',\n      dark: '#001064',\n      contrastText: '#fff',\n    },\n    background: {\n      default: '#fcfcfe',\n    },\n    type: 'light',\n  },\n  shape: {\n    borderRadius: 10,\n  },\n  overrides: {\n    RaMenuItemLink: {\n      root: {\n        borderLeft: '3px solid #fff',\n      },\n      active: {\n        borderLeft: '3px solid #4f3cc9',\n      },\n    },\n    MuiPaper: {\n      elevation1: {\n        boxShadow: 'none',\n      },\n      root: {\n        border: '1px solid #e0e0e3',\n        backgroundClip: 'padding-box',\n      },\n    },\n    MuiButton: {\n      contained: {\n        backgroundColor: '#fff',\n        color: '#4f3cc9',\n        boxShadow: 'none',\n      },\n    },\n    MuiButtonBase: {\n      root: {\n        '&:hover:active::after': {\n          // recreate a static ripple color\n          // use the currentColor to make it work both for outlined and contained buttons\n          // but to dim the background without dimming the text,\n          // put another element on top with a limited opacity\n          content: '\"\"',\n          display: 'block',\n          width: '100%',\n          height: '100%',\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          backgroundColor: 'currentColor',\n          opacity: 0.3,\n          borderRadius: 'inherit',\n        },\n      },\n    },\n    MuiAppBar: {\n      colorSecondary: {\n        color: '#808080',\n        backgroundColor: '#fff',\n      },\n    },\n    MuiLinearProgress: {\n      colorPrimary: {\n        backgroundColor: '#f5f5f5',\n      },\n      barColorPrimary: {\n        backgroundColor: '#d7d7d7',\n      },\n    },\n    MuiFilledInput: {\n      root: {\n        backgroundColor: 'rgba(0, 0, 0, 0.04)',\n        '&$disabled': {\n          backgroundColor: 'rgba(0, 0, 0, 0.04)',\n        },\n      },\n    },\n    MuiSnackbarContent: {\n      root: {\n        border: 'none',\n      },\n    },\n  },\n  props: {\n    MuiButtonBase: {\n      // disable ripple for perf reasons\n      disableRipple: true,\n    },\n  },\n};\n","import { Reducer } from 'redux';\n\nexport const CHANGE_THEME = 'CHANGE_THEME';\n\nexport const changeTheme = (theme: ThemeName) => ({\n  type: CHANGE_THEME,\n  payload: theme,\n});\n\nexport type ThemeName = 'light' | 'dark';\n\ntype State = ThemeName;\ntype Action =\n  | ReturnType<typeof changeTheme>\n  | { type: 'OTHER_ACTION'; payload?: any };\n\nconst themeReducer: Reducer<State, Action> = (\n  previousState = (localStorage.getItem('theme') as ThemeName) || 'light',\n  action,\n) => {\n  if (action.type === CHANGE_THEME) {\n    return action.payload;\n  }\n  return previousState;\n};\n\nexport default themeReducer;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { AppState } from './reducers';\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport Button from '@material-ui/core/Button';\nimport { changeTheme } from './reducers/theme';\n\nconst ThemeSwitcher = () => {\n  const theme = useSelector((state: AppState) => state.theme);\n  const dispatch = useDispatch();\n\n  const onChange = (value) => {\n    localStorage.setItem('theme', value);\n    dispatch(changeTheme(value));\n  };\n\n  return (\n    <div>\n      {theme === 'light' && (\n        <Button onClick={() => onChange('dark')}>\n          <Brightness3Icon />\n        </Button>\n      )}\n      {theme === 'dark' && (\n        <Button onClick={() => onChange('light')}>\n          <Brightness7Icon />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default ThemeSwitcher;\n","import { AppBar, MenuItemLink, UserMenu, useGetIdentity } from \"react-admin\";\n\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport ThemeSwitcher from \"./ThemeSwitcher\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { forwardRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textAlign: \"center\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n  },\n  logo: {\n    flex: 1,\n    maxWidth: \"100px\",\n    marginLeft: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n});\n\nconst ChangeMyPasswordMenu = forwardRef<any, any>((props, ref) => {\n  return (\n    <MenuItemLink\n      ref={ref}\n      to=\"/change-my-password\"\n      primaryText=\"Change my password\"\n      style={{ marginLeft: -4 }}\n      leftIcon={<LockIcon />}\n      onClick={props.onClick}\n      sidebarIsOpen\n    />\n  );\n});\n\nconst CustomUserMenu = (props: any) => {\n  const { identity } = useGetIdentity();\n  return (\n    <UserMenu {...props}>\n      {!identity?.isAd && <ChangeMyPasswordMenu />}\n    </UserMenu>\n  );\n};\n\nconst CustomAppBar = (props) => {\n  const classes = useStyles();\n  return (\n    <AppBar {...props} elevation={1} userMenu={<CustomUserMenu />}>\n      <img src=\"/logo_header.png\" alt=\"logo\" className={classes.logo} />\n      <Typography\n        variant=\"h6\"\n        color=\"inherit\"\n        className={classes.title}\n        id=\"react-admin-title\"\n      />\n      {/* <LocaleSwitcher /> */}\n      <ThemeSwitcher />\n    </AppBar>\n  );\n};\n\nexport default CustomAppBar;\n","import { darkTheme, lightTheme } from './libs/themes';\n\nimport { AppState } from './reducers';\nimport CustomAppBar from './CustomAppBar';\nimport { Layout } from 'react-admin';\nimport { useSelector } from 'react-redux';\n\nconst CustomLayout = (props) => {\n  const theme = useSelector((state: AppState) =>\n    state.theme === 'dark' ? darkTheme : lightTheme,\n  );\n  return <Layout {...props} appBar={CustomAppBar} theme={theme} />;\n};\n\nexport default CustomLayout;\n","import { createTheme } from '@material-ui/core/styles';\nimport { defaultTheme } from 'react-admin';\n\nconst customTheme = createTheme({\n  ...defaultTheme,\n  ...{\n    palette: {\n      secondary: {\n        main: '#fff',\n      },\n    },\n    MuiTableRow: {\n      root: {\n        height: 40,\n      },\n    },\n  },\n});\n\nexport default customTheme;\n","import * as Types from \"./operations\";\n\nimport { gql } from \"@apollo/client\";\nimport * as Apollo from \"@apollo/client\";\nconst defaultOptions = {};\n\nexport const TestMutationDocument = gql`\n  mutation testMutation {\n    testMutation\n  }\n`;\nexport type TestMutationMutationFn = Apollo.MutationFunction<\n  Types.TestMutationMutation,\n  Types.TestMutationMutationVariables\n>;\n\n/**\n * __useTestMutationMutation__\n *\n * To run a mutation, you first call `useTestMutationMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useTestMutationMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [testMutationMutation, { data, loading, error }] = useTestMutationMutation({\n *   variables: {\n *   },\n * });\n */\nexport function useTestMutationMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    Types.TestMutationMutation,\n    Types.TestMutationMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<\n    Types.TestMutationMutation,\n    Types.TestMutationMutationVariables\n  >(TestMutationDocument, options);\n}\nexport type TestMutationMutationHookResult = ReturnType<\n  typeof useTestMutationMutation\n>;\nexport type TestMutationMutationResult =\n  Apollo.MutationResult<Types.TestMutationMutation>;\nexport type TestMutationMutationOptions = Apollo.BaseMutationOptions<\n  Types.TestMutationMutation,\n  Types.TestMutationMutationVariables\n>;\nexport const GetDeliveryNotesDocument = gql`\n  query getDeliveryNotes($search: String!) {\n    getDeliveryNotes(search: $search) {\n      Sklad\n      Klient\n      KlientNazev\n      FakturacniMistoNazev\n      DodaciMisto_Kod\n      DodaciMisto_Nazev\n      DodaciMisto_Ulice\n      DodaciMisto_PSC\n      DodaciMisto_Mesto\n      DodaciMisto_Zeme\n      CisloDL\n      CisloObjKlienta\n      CisloObjZakaznika\n      InterniCisloDokladuProTisk\n      DatumDodani\n      Doprava_Linka\n      Doprava_CODE\n    }\n  }\n`;\n\n/**\n * __useGetDeliveryNotesQuery__\n *\n * To run a query within a React component, call `useGetDeliveryNotesQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetDeliveryNotesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetDeliveryNotesQuery({\n *   variables: {\n *      search: // value for 'search'\n *   },\n * });\n */\nexport function useGetDeliveryNotesQuery(\n  baseOptions: Apollo.QueryHookOptions<\n    Types.GetDeliveryNotesQuery,\n    Types.GetDeliveryNotesQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<\n    Types.GetDeliveryNotesQuery,\n    Types.GetDeliveryNotesQueryVariables\n  >(GetDeliveryNotesDocument, options);\n}\nexport function useGetDeliveryNotesLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    Types.GetDeliveryNotesQuery,\n    Types.GetDeliveryNotesQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<\n    Types.GetDeliveryNotesQuery,\n    Types.GetDeliveryNotesQueryVariables\n  >(GetDeliveryNotesDocument, options);\n}\nexport type GetDeliveryNotesQueryHookResult = ReturnType<\n  typeof useGetDeliveryNotesQuery\n>;\nexport type GetDeliveryNotesLazyQueryHookResult = ReturnType<\n  typeof useGetDeliveryNotesLazyQuery\n>;\nexport type GetDeliveryNotesQueryResult = Apollo.QueryResult<\n  Types.GetDeliveryNotesQuery,\n  Types.GetDeliveryNotesQueryVariables\n>;\n","import { Button, FormControl, InputLabel, OutlinedInput } from \"@mui/material\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Paper from \"@mui/material/Paper\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { Title } from \"react-admin\";\nimport cookie from \"js-cookie\";\nimport { url } from \"../../\";\nimport { useGetDeliveryNotesLazyQuery } from \"../../@generated/hooks\";\nimport { useState } from \"react\";\n\nexport const DeliveryNotesList = (props: any) => {\n  const [search, setSearch] = useState(\"5006905\");\n\n  const [getDeliveryNotes, { data }] = useGetDeliveryNotesLazyQuery();\n\n  console.log(\"data \", data);\n\n  const onSubmit = async () => {\n    getDeliveryNotes({\n      variables: {\n        search,\n      },\n    });\n  };\n\n  return (\n    <div>\n      <Card style={{ width: 400, marginLeft: \"30%\" }}>\n        <Title title=\"Delivery note\" />\n        <CardContent>\n          <form onSubmit={onSubmit}>\n            <FormControl size=\"small\" style={{ marginTop: 20, width: \"100%\" }}>\n              <InputLabel>Search</InputLabel>\n              <OutlinedInput\n                type=\"text\"\n                size=\"small\"\n                label=\"Search\"\n                value={search}\n                onChange={(event) => setSearch(event.target.value)}\n              />\n            </FormControl>\n\n            <br />\n\n            <Button onClick={onSubmit} style={{ width: \"100%\" }}>\n              Search\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n\n      <br />\n\n      <TableContainer component={Paper} style={{ maxHeight: \"70vh\" }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"right\">Klient</TableCell>\n              <TableCell align=\"right\">Fakturační místo</TableCell>\n              <TableCell align=\"right\">Adresa dodání</TableCell>\n              <TableCell align=\"right\">Město dodání</TableCell>\n              <TableCell align=\"right\">Země dodání</TableCell>\n              <TableCell align=\"right\">Číslo DL</TableCell>\n              <TableCell align=\"right\">Objednávka</TableCell>\n              <TableCell align=\"right\">Objednávka zákazníka</TableCell>\n              <TableCell align=\"right\">Code</TableCell>\n              <TableCell align=\"right\">Akce</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {(data?.getDeliveryNotes || []).map((row, key) => (\n              <TableRow\n                key={key}\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              >\n                <TableCell align=\"right\">{row.KlientNazev}</TableCell>\n                <TableCell align=\"right\">{row.FakturacniMistoNazev}</TableCell>\n                <TableCell align=\"right\">{row.DodaciMisto_Nazev}</TableCell>\n                <TableCell align=\"right\">{row.DodaciMisto_Mesto}</TableCell>\n                <TableCell align=\"right\">{row.DodaciMisto_Zeme}</TableCell>\n                <TableCell align=\"right\">{row.CisloDL}</TableCell>\n                <TableCell align=\"right\">{row.CisloObjKlienta}</TableCell>\n                <TableCell align=\"right\">{row.CisloObjZakaznika}</TableCell>\n                <TableCell align=\"right\">{row.Doprava_CODE}</TableCell>\n                <TableCell align=\"right\">\n                  <a\n                    target=\"_blank\"\n                    href={`${url}/admin/delivery-note/${\n                      row.CisloDL\n                    }?access_token=${cookie.get(\"access_token\")}`}\n                    download\n                    style={{ margin: \"0 auto\" }}\n                  >\n                    Download\n                  </a>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n","import cookie from \"js-cookie\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/client\";\n\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      user {\n        id\n        email\n        isAd\n        isAdmin\n        presetPassword\n      }\n      access_token\n    }\n  }\n`;\n\nexport function useAuth() {\n  const [login] = useMutation(LOGIN_MUTATION);\n\n  const handleLogin = async (email: string, password: string) => {\n    const { data } = await login({\n      variables: { email, password },\n    });\n\n    if (data?.login.access_token) {\n      cookie.set(\"access_token\", data.login.access_token, {\n        httpOnly: false,\n      });\n\n      localStorage.setItem(\"user\", JSON.stringify(data?.login.user));\n\n      return data?.login?.user;\n    }\n\n    return false;\n  };\n\n  return {\n    handleLogin,\n  };\n}\n","import { Button, TextField } from \"@material-ui/core\";\nimport { Notification, defaultTheme, useNotify } from \"react-admin\";\n\nimport PropTypes from \"prop-types\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createTheme } from \"@material-ui/core/styles\";\nimport { useAuth } from \"src/hooks/useAuth\";\nimport { useState } from \"react\";\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { handleLogin } = useAuth();\n\n  const notify = useNotify();\n\n  const submit = async (e) => {\n    e.preventDefault();\n    try {\n      const login = await handleLogin(email, password);\n      if (login?.presetPassword) {\n        window.location.href = \"/#/change-my-password\";\n      } else {\n        window.location.href = \"/\";\n      }\n    } catch (error) {\n      notify(\"Invalid email or password\");\n    }\n  };\n\n  return (\n    <ThemeProvider theme={createTheme(defaultTheme)}>\n      <form onSubmit={submit} style={{ padding: \"0 20px 20px 20px\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginTop: 6,\n            marginBottom: 20,\n          }}\n        >\n          <img src=\"/logo_header.png\" alt=\"logo\" />\n        </div>\n\n        <div>\n          <TextField\n            name=\"email\"\n            type=\"email\"\n            style={{ width: \"100%\" }}\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <div>\n          <TextField\n            name=\"password\"\n            type=\"password\"\n            style={{ width: \"100%\" }}\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginTop: 20,\n          }}\n        >\n          <Button color=\"primary\" type=\"submit\" onClick={submit}>\n            Login\n          </Button>\n        </div>\n      </form>\n      <Notification />\n    </ThemeProvider>\n  );\n};\n\nLoginForm.propTypes = {\n  authProvider: PropTypes.func,\n  previousRoute: PropTypes.string,\n};\n\nconst LoginWithTheme = (props: any) => <LoginForm {...props} />;\n\nexport default LoginWithTheme;\n","import { useApolloClient } from '@apollo/client';\nimport { useMemo } from 'react';\n\nconst withAuthProvider = () => {\n  const apolloClient = useApolloClient();\n  return useMemo(() => {\n    return {\n      login: async () => {\n        console.log('login');\n        return true;\n      },\n      logout: async () => {\n        localStorage.removeItem('user');\n        await apolloClient.resetStore();\n        return Promise.resolve();\n      },\n      checkError: (error) => {\n        const status = error.status;\n        if (\n          status === 401 ||\n          status === 403 ||\n          error.message.includes('Not Authorised!')\n        ) {\n          document.cookie = '';\n          localStorage.removeItem('user');\n          return Promise.reject({ redirectTo: '/login' });\n        }\n        // other error code (404, 500, etc): no need to log out\n        return Promise.resolve();\n      },\n      checkAuth: async () => {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (!user) {\n          return Promise.reject({ redirectTo: '/login' });\n        }\n\n        return Promise.resolve(user);\n      },\n      getPermissions: () => {\n        const user = JSON.parse(localStorage.getItem('user'));\n        return Promise.resolve({\n          presetPassword: user?.presetPassword,\n        });\n      },\n      getIdentity: async () => {\n        const user = JSON.parse(localStorage.getItem('user'));\n\n        return Promise.resolve(user);\n      },\n    };\n  }, []);\n};\n\nexport default withAuthProvider;\n","import de from './de.json';\nimport en from './en.json';\nimport englishMessages from 'ra-language-english';\nimport germanMessages from 'ra-language-german';\nimport { merge } from 'lodash';\nimport polyglotI18nProvider from 'ra-i18n-polyglot';\nimport { resolveBrowserLocale } from 'react-admin';\n\nexport default polyglotI18nProvider(\n  locale =>\n    locale === 'de' ? merge(germanMessages, de) : merge(englishMessages, en),\n  localStorage.getItem('locale') || resolveBrowserLocale(),\n  { allowMissing: true, onMissingKey: key => key },\n);\n","import \"./App.css\";\n\nimport { Admin, Login, Resource } from \"react-admin\";\nimport { UserCreate, UserEdit, UsersList } from \"./modules/users/users\";\nimport styled, { createGlobalStyle } from \"styled-components\";\n\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\nimport ChangeMyPassword from \"./modules/users/changeMyPassword\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport CustomLayout from \"./CustomLayout\";\nimport CustomTheme from \"./CustomTheme\";\nimport { DeliveryNotesList } from \"./modules/deliveryNotes\";\nimport FindInPageIcon from \"@material-ui/icons/FindInPage\";\nimport LoginForm from \"./modules/login\";\nimport { Options } from \"@ra-data-prisma/dataprovider\";\nimport { Route } from \"react-router-dom\";\nimport { appProvidersFactory } from \"./appProvidersFactory\";\nimport i18nProvider from \"./locales\";\nimport schema from \"../src/graphql-schema.json\";\nimport themeReducer from \"./reducers/theme\";\n\nexport const Center = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const SpinnerWrapper = createGlobalStyle`\n  html, body, #root {\n    height: 100%;\n  }\n`;\n\nconst App: React.VFC<{ client: any }> = ({ client }) => {\n  const options: Options = {\n    client,\n    introspection: {\n      schema: (schema as any).__schema,\n    },\n    queryDialect: \"typegraphql\",\n  };\n\n  const { dataProvider, authProvider } = appProvidersFactory()(options);\n\n  if (!dataProvider) {\n    return (\n      <Center>\n        <SpinnerWrapper />\n        <CircularProgress />\n      </Center>\n    );\n  }\n\n  return (\n    <Admin\n      dataProvider={dataProvider}\n      disableTelemetry={true}\n      layout={CustomLayout}\n      i18nProvider={i18nProvider}\n      theme={CustomTheme}\n      customReducers={{ theme: themeReducer }}\n      loginPage={(props) => (\n        <Login {...props}>\n          <LoginForm />\n        </Login>\n      )}\n      customRoutes={[\n        <Route path=\"/change-my-password\" component={ChangeMyPassword} />,\n      ]}\n      authProvider={authProvider}\n    >\n      {(auth) => {\n        return auth.presetPassword\n          ? [<Resource name=\"User\" />]\n          : [\n              <Resource\n                name=\"DeliveryNotes\"\n                options={{ label: \"Delivery notes\" }}\n                list={DeliveryNotesList}\n                icon={FindInPageIcon}\n              />,\n              <Resource\n                name=\"User\"\n                list={UsersList}\n                edit={UserEdit}\n                create={UserCreate}\n                icon={AssignmentIndIcon}\n              />,\n            ];\n      }}\n    </Admin>\n  );\n};\n\nexport default App;\n","import { Options, buildDataProvider } from '@ra-data-prisma/dataprovider';\nimport { useEffect, useState } from 'react';\n\nimport { CREATE } from 'react-admin';\nimport withAuthProvider from './authProvider';\n\nexport const appProvidersFactory = () => {\n  return (options: Options) => {\n    const [dataProvider, setDataProvider] = useState<any>();\n    const authProvider = withAuthProvider();\n\n    useEffect(() => {\n      buildDataProvider(options)\n        .then((p) => {\n          setDataProvider(() => p);\n        })\n\n        .catch((e) => {\n          console.error(e);\n        });\n    }, []);\n\n    const getDataProvider = (type: string, resource: string, params: any) => {\n      if (!dataProvider) return false;\n\n      if (type === CREATE && resource === 'VehicleEquipment') {\n        return dataProvider(type, resource, {\n          data: {\n            equipmentType: params.data.equipmentTypeId,\n            vehicle: params.data.vehicleId,\n          },\n        });\n      }\n\n      return dataProvider(type, resource, params);\n    };\n\n    return {\n      dataProvider: dataProvider && getDataProvider,\n      authProvider,\n    };\n  };\n};\n","import { ApolloClient, ApolloLink, InMemoryCache } from '@apollo/client';\n\nimport cookie from 'js-cookie';\nimport { createUploadLink } from 'apollo-upload-client';\nimport { onError } from '@apollo/client/link/error';\nimport { setContext } from '@apollo/client/link/context';\n\nconst headerLink = setContext(async (_, { headers }) => {\n  try {\n    const token = cookie.get('access_token');\n    return {\n      headers: {\n        ...headers,\n        Authorization: token ? `Bearer ${token}` : '',\n      },\n    };\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors)\n    graphQLErrors.map(({ message, locations, path }) =>\n      console.error(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n      ),\n    );\n  if (networkError) console.error(`[Network error]: ${networkError}`);\n});\n\nconst createApolloClient = (endpoint: string) => {\n  console.log(`Connecting to ${endpoint}`);\n\n  return new ApolloClient({\n    link: ApolloLink.from([\n      headerLink,\n      errorLink,\n      createUploadLink({ uri: endpoint }) as any,\n    ]),\n    cache: new InMemoryCache(),\n  });\n};\nexport default createApolloClient;\n","import './index.css';\n\nimport { ApolloProvider } from '@apollo/client';\nimport App from './App';\nimport { LoadScript } from '@react-google-maps/api';\nimport ReactDOM from 'react-dom';\nimport createApolloClient from './libs/createApolloClient';\nimport dayjs from 'dayjs';\nimport timezone from 'dayjs/plugin/timezone';\nimport utc from 'dayjs/plugin/utc';\n\ndayjs.extend(timezone);\ndayjs.extend(utc);\n\nexport const url = process.env.REACT_APP_API_URL || 'http://localhost:3000';\n\nconst client = createApolloClient(url + '/admin/graphql');\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <LoadScript\n      libraries={['places']}\n      googleMapsApiKey=\"AIzaSyDD2xolNUFyUhWnPDXJo1hi0pjhFpw85vY\">\n      <App client={client} />\n    </LoadScript>\n  </ApolloProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}