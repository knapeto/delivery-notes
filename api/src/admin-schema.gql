# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AffectedRowsOutput {
  count: Int!
}

type AggregateUser {
  _count: UserCountAggregate
  _max: UserMaxAggregate
  _min: UserMinAggregate
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input BoolNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedBoolNullableFilter
  _min: NestedBoolNullableFilter
  equals: Boolean
  not: NestedBoolNullableWithAggregatesFilter
}

input BoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input DateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTime!]
}

input DateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime!]
}

type DeliveryNote {
  CisloDL: String
  CisloObjKlienta: String
  CisloObjZakaznika: String
  DatumDodani: String
  DodaciMisto_Kod: String
  DodaciMisto_Mesto: String
  DodaciMisto_Nazev: String
  DodaciMisto_PSC: String
  DodaciMisto_Ulice: String
  DodaciMisto_Zeme: String
  Doprava_CODE: String
  Doprava_Linka: String
  FakturacniMistoNazev: String
  InterniCisloDokladuProTisk: String
  Klient: String
  KlientNazev: String
  Sklad: String
}

type LoginResponse {
  access_token: String!
  user: User!
}

type Mutation {
  createManyUser(data: [UserCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createUser(data: UserCreateInput!): User!
  deleteManyUser(where: UserWhereInput): AffectedRowsOutput!
  deleteUser(where: UserWhereUniqueInput!): User
  login(email: String!, password: String!): LoginResponse!
  testMutation: Boolean!
  updateManyUser(data: UserUpdateManyMutationInput!, where: UserWhereInput): AffectedRowsOutput!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User!
  upsertUser(create: UserCreateInput!, update: UserUpdateInput!, where: UserWhereUniqueInput!): User!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedBoolNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedBoolNullableFilter
  _min: NestedBoolNullableFilter
  equals: Boolean
  not: NestedBoolNullableWithAggregatesFilter
}

input NestedBoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTime!]
}

input NestedDateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Query {
  aggregateUser(cursor: UserWhereUniqueInput, orderBy: [UserOrderByWithRelationInput!], skip: Int, take: Int, where: UserWhereInput): AggregateUser!
  findFirstUser(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum!], orderBy: [UserOrderByWithRelationInput!], skip: Int, take: Int, where: UserWhereInput): User
  getDeliveryNotes(search: String): [DeliveryNote!]!
  groupByUser(by: [UserScalarFieldEnum!]!, having: UserScalarWhereWithAggregatesInput, orderBy: [UserOrderByWithAggregationInput!], skip: Int, take: Int, where: UserWhereInput): [UserGroupBy!]!
  testQuery: Boolean!
  user(where: UserWhereUniqueInput!): User
  users(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum!], orderBy: [UserOrderByWithRelationInput!], skip: Int, take: Int, where: UserWhereInput): [User!]!
}

enum QueryMode {
  default
  insensitive
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

type User {
  createdAt: DateTime!
  deletedAt: DateTime
  email: String!
  firstName: String
  id: String!
  isAd: Boolean!
  isAdmin: Boolean!
  lastName: String
  presetPassword: Boolean
}

type UserCountAggregate {
  _all: Int!
  createdAt: Int!
  deletedAt: Int!
  email: Int!
  firstName: Int!
  id: Int!
  isAd: Int!
  isAdmin: Int!
  lastName: Int!
  password: Int!
  presetPassword: Int!
  tokenSalt: Int!
}

input UserCountOrderByAggregateInput {
  createdAt: SortOrder
  deletedAt: SortOrder
  email: SortOrder
  firstName: SortOrder
  id: SortOrder
  isAd: SortOrder
  isAdmin: SortOrder
  lastName: SortOrder
  password: SortOrder
  presetPassword: SortOrder
  tokenSalt: SortOrder
}

input UserCreateInput {
  createdAt: DateTime
  deletedAt: DateTime
  email: String!
  firstName: String
  id: String
  isAd: Boolean!
  isAdmin: Boolean
  lastName: String
  password: String
  presetPassword: Boolean
  tokenSalt: String
}

input UserCreateManyInput {
  createdAt: DateTime
  deletedAt: DateTime
  email: String!
  firstName: String
  id: String
  isAd: Boolean!
  isAdmin: Boolean
  lastName: String
  password: String
  presetPassword: Boolean
  tokenSalt: String
}

type UserGroupBy {
  _count: UserCountAggregate
  _max: UserMaxAggregate
  _min: UserMinAggregate
  createdAt: DateTime!
  deletedAt: DateTime
  email: String!
  firstName: String
  id: String!
  isAd: Boolean!
  isAdmin: Boolean!
  lastName: String
  password: String
  presetPassword: Boolean
  tokenSalt: String!
}

type UserMaxAggregate {
  createdAt: DateTime
  deletedAt: DateTime
  email: String
  firstName: String
  id: String
  isAd: Boolean
  isAdmin: Boolean
  lastName: String
  password: String
  presetPassword: Boolean
  tokenSalt: String
}

input UserMaxOrderByAggregateInput {
  createdAt: SortOrder
  deletedAt: SortOrder
  email: SortOrder
  firstName: SortOrder
  id: SortOrder
  isAd: SortOrder
  isAdmin: SortOrder
  lastName: SortOrder
  password: SortOrder
  presetPassword: SortOrder
  tokenSalt: SortOrder
}

type UserMinAggregate {
  createdAt: DateTime
  deletedAt: DateTime
  email: String
  firstName: String
  id: String
  isAd: Boolean
  isAdmin: Boolean
  lastName: String
  password: String
  presetPassword: Boolean
  tokenSalt: String
}

input UserMinOrderByAggregateInput {
  createdAt: SortOrder
  deletedAt: SortOrder
  email: SortOrder
  firstName: SortOrder
  id: SortOrder
  isAd: SortOrder
  isAdmin: SortOrder
  lastName: SortOrder
  password: SortOrder
  presetPassword: SortOrder
  tokenSalt: SortOrder
}

input UserOrderByWithAggregationInput {
  _count: UserCountOrderByAggregateInput
  _max: UserMaxOrderByAggregateInput
  _min: UserMinOrderByAggregateInput
  createdAt: SortOrder
  deletedAt: SortOrder
  email: SortOrder
  firstName: SortOrder
  id: SortOrder
  isAd: SortOrder
  isAdmin: SortOrder
  lastName: SortOrder
  password: SortOrder
  presetPassword: SortOrder
  tokenSalt: SortOrder
}

input UserOrderByWithRelationInput {
  createdAt: SortOrder
  deletedAt: SortOrder
  email: SortOrder
  firstName: SortOrder
  id: SortOrder
  isAd: SortOrder
  isAdmin: SortOrder
  lastName: SortOrder
  password: SortOrder
  presetPassword: SortOrder
  tokenSalt: SortOrder
}

enum UserScalarFieldEnum {
  createdAt
  deletedAt
  email
  firstName
  id
  isAd
  isAdmin
  lastName
  password
  presetPassword
  tokenSalt
}

input UserScalarWhereWithAggregatesInput {
  AND: [UserScalarWhereWithAggregatesInput!]
  NOT: [UserScalarWhereWithAggregatesInput!]
  OR: [UserScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  deletedAt: DateTimeNullableWithAggregatesFilter
  email: StringWithAggregatesFilter
  firstName: StringNullableWithAggregatesFilter
  id: StringWithAggregatesFilter
  isAd: BoolWithAggregatesFilter
  isAdmin: BoolWithAggregatesFilter
  lastName: StringNullableWithAggregatesFilter
  password: StringNullableWithAggregatesFilter
  presetPassword: BoolNullableWithAggregatesFilter
  tokenSalt: StringWithAggregatesFilter
}

input UserUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAd: BoolFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  presetPassword: NullableBoolFieldUpdateOperationsInput
  tokenSalt: StringFieldUpdateOperationsInput
}

input UserUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAd: BoolFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  presetPassword: NullableBoolFieldUpdateOperationsInput
  tokenSalt: StringFieldUpdateOperationsInput
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  createdAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
  email: StringFilter
  firstName: StringNullableFilter
  id: StringFilter
  isAd: BoolFilter
  isAdmin: BoolFilter
  lastName: StringNullableFilter
  password: StringNullableFilter
  presetPassword: BoolNullableFilter
  tokenSalt: StringFilter
}

input UserWhereUniqueInput {
  id: String
}
